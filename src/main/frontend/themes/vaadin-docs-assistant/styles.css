html {
  --layout-max-width: 60rem;
  font-size: 15px;
}

@media (pointer: coarse) {
  html {
    font-size: 18px;
  }
}

.main-layout {
  position: fixed;
  inset: 0;
  top: auto;
  height: var(--viewport-height, 100dvh);
  max-height: 100dvh;
  box-sizing: border-box;

  padding-top: env(safe-area-inset-top);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
  padding-bottom: env(safe-area-inset-bottom);
}

/* When the virtual keyboard is visible */
html[style*=viewport-height] .main-layout {
  padding-bottom: 0;
}

/* Prevent weird scrolling issues on iOS when the keyboard is visible */
/* Basically, make .main-layout a scroll container, and then contain overscrolling within it */
/* This isn't an ideal/foolproof way of checking when should use this hack */
@media (pointer: coarse) {
  .main-layout {
    overflow: auto;
    overscroll-behavior: none;
  }

  .main-layout::before {
    content: "";
    height: calc(100% + 0.5px);
    width: 1px;
    position: absolute;
    pointer-events: none;
  }
}

.framework-select {
  --vaadin-field-default-width: auto;
  font-size: var(--lumo-font-size-s);
}

.framework-select vaadin-select-value-button {
  width: max-content;
  mask-image: none;
  font-size: inherit;
}

.framework-select::part(input-field) {
  background: transparent;
}

header,
vaadin-scroller > *,
vaadin-message-input {
  box-sizing: border-box;
  width: 100%;
  max-width: var(--layout-max-width);
  margin: 0 auto;
}

vaadin-scroller {
  overscroll-behavior: contain;
}

.message-content {
  min-width: 0;
}

.me .message-content {
  flex: none;
  box-sizing: border-box;
  width: fit-content;
  max-width: 80%;
  background-color: var(--lumo-contrast-5pct);
  padding: var(--lumo-space-m);
  border-radius: var(--lumo-border-radius-l);
  margin-inline-start: auto;
}

.message-content > :first-child {
  margin-top: 0;
}

.message-content > :last-child {
  margin-bottom: 0;
}

.message-content code {
  font-size: 0.875em;
}

.message-content code:not(.hljs) {
  padding: 0.15em 0.3em;
}

.message-content pre {
  background-color: transparent;
}

.message-content pre code {
  border-radius: var(--lumo-border-radius-m);
}

vaadin-message-input vaadin-text-area {
  margin-inline-end: 0;
}

vaadin-message-input vaadin-text-area::part(input-field) {
  border-radius: var(--lumo-border-radius-l);
  padding: 0.75em;
}

vaadin-message-input vaadin-button[theme] {
  width: calc(var(--lumo-size-m) + 0.75em - 2px);
  height: calc(var(--lumo-size-m) + 0.75em - 2px);
  min-width: 0;
  background: transparent;
  padding: 0;
  margin-inline-start: calc(var(--lumo-size-m) * -1 - 0.75em + 2px);
  align-self: end;
  color: var(--lumo-secondary-text-color);
}

vaadin-message-input vaadin-button:hover {
  color: var(--lumo-body-text-color);
}

vaadin-message-input vaadin-button[theme]::before {
  display: none;
}

vaadin-message-input vaadin-button::part(label) {
  text-overflow: clip;
  padding: 0;
  font-size: 0;
}

vaadin-message-input vaadin-button::part(label)::before {
  content: "";
  display: inline-block;
  width: var(--lumo-size-m);
  height: var(--lumo-size-m);
  background: currentColor;
  -webkit-mask-image: var(--mask-image);
  mask-image: var(--mask-image);
  -webkit-mask-size: 50%;
  mask-size: 50%;
  -webkit-mask-position: 50%;
  mask-position: 50%;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  vertical-align: top;
}
